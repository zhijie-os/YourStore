[{"/home/notauser/YourStore/client/src/index.js":"1","/home/notauser/YourStore/client/src/App.js":"2","/home/notauser/YourStore/client/src/components/navbar.jsx":"3","/home/notauser/YourStore/client/src/components/searchbar.jsx":"4","/home/notauser/YourStore/client/src/components/footer.jsx":"5"},{"size":363,"mtime":1649061625052,"results":"6","hashOfConfig":"7"},{"size":322,"mtime":1649074175821,"results":"8","hashOfConfig":"7"},{"size":1645,"mtime":1649074214631,"results":"9","hashOfConfig":"7"},{"size":1245,"mtime":1649070688436,"results":"10","hashOfConfig":"7"},{"size":435,"mtime":1649074155781,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"15qpdkb",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/notauser/YourStore/client/src/index.js",[],[],["29","30"],"/home/notauser/YourStore/client/src/App.js",["31"],[],"/home/notauser/YourStore/client/src/components/navbar.jsx",["32","33"],[],"/home/notauser/YourStore/client/src/components/searchbar.jsx",["34"],[],"import React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\n\n\nfunction SearchBar(props){\n    const [loaded, setLoaded] = useState(false);\n    const [allCategories, setAll] = useState([]);\n\n    useEffect(() => {\n          axios.get(\"http://127.0.0.1:8888/categories\")\n          .then(res => \n            {\n                console.log(res.data);\n                setAll(res.data);\n                setLoaded(true);\n            })\n      }, [])\n\n    return (\n        <div className=\"input-group search-bar\">\n            <div className=\"dropdown input-group-prepend\">\n                <button className=\"btn btn-secondary dropdown-toggle btn-lg\" type=\"button\"\n                    data-bs-toggle=\"dropdown\">\n                    All\n                </button>\n                <ul className=\"dropdown-menu\">\n                    {loaded && allCategories.map(category=><li><a className=\"dropdown-item\" href=\"#\">{category.Title}</a></li>)}\n                </ul>\n            </div>\n            <input type=\"text\" className=\"form-control\" />\n            <button className=\"input-group-append btn btn-secondary btn-lg\" type=\"button\">Search<i\n                className=\"bi bi-search\"></i></button>\n        </div>\n    );\n}\n\nexport default SearchBar","/home/notauser/YourStore/client/src/components/footer.jsx",["35"],[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":17},{"ruleId":"44","severity":1,"message":"45","line":11,"column":7,"nodeType":"46","endLine":11,"endColumn":9,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":16,"column":17,"nodeType":"50","endLine":16,"endColumn":65},{"ruleId":"48","severity":1,"message":"49","line":27,"column":64,"nodeType":"50","endLine":27,"endColumn":102},{"ruleId":"48","severity":1,"message":"49","line":7,"column":13,"nodeType":"50","endLine":7,"endColumn":70},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userType'. Either include it or remove the dependency array. If 'setUserType' needs the current value of 'props.userType', you can also switch to useReducer instead of useState and read 'props.userType' in the reducer.","ArrayExpression",["53"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [props.userType]",{"range":"56","text":"57"},[267,269],"[props.userType]"]